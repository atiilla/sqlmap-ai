{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SQLMap AI Documentation","text":"<ul> <li> <p> Quick Start</p> <p>Get up and running with SQLMap AI in minutes</p> </li> <li> <p> User Guide</p> <p>Learn how to use SQLMap AI effectively</p> </li> <li> <p> Examples</p> <p>See SQLMap AI in action with real examples</p> </li> <li> <p> Configuration</p> <p>Configure AI providers and settings</p> </li> </ul>"},{"location":"#what-is-sqlmap-ai","title":"What is SQLMap AI?","text":"<p>SQLMap AI is an AI-powered wrapper around SQLMap that makes SQL injection testing more accessible and automated. It combines the power of SQLMap with intelligent AI analysis to provide:</p> <ul> <li>\ud83e\udd16 AI-Assisted Testing: Get intelligent recommendations and automated analysis</li> <li>\u26a1 Multiple AI Providers: Support for Groq, OpenAI, Anthropic, and Ollama</li> <li>\ud83d\udd04 Adaptive Testing: Automatically adapts testing strategy based on target</li> <li>\ud83d\udcca Beautiful Reports: Generate comprehensive HTML reports with AI insights</li> <li>\ud83d\udd12 Privacy Options: Use local AI models with Ollama for complete privacy</li> <li>\ud83d\udcc1 Request File Support: Test complex scenarios with captured HTTP requests</li> </ul>"},{"location":"#key-features","title":"Key Features","text":""},{"location":"#ai-powered-analysis","title":"AI-Powered Analysis","text":"<ul> <li>Intelligent vulnerability assessment</li> <li>Automated next-step recommendations</li> <li>Risk analysis and remediation guidance</li> <li>Context-aware testing strategies</li> </ul>"},{"location":"#multiple-testing-modes","title":"Multiple Testing Modes","text":"<ul> <li>Enhanced Mode: Full AI-powered testing with advanced features</li> <li>Simple Mode: Basic SQL injection testing without AI</li> <li>Adaptive Mode: Intelligent step-by-step testing</li> </ul>"},{"location":"#ai-provider-support","title":"AI Provider Support","text":"<ul> <li>Groq: Fastest cloud AI provider</li> <li>OpenAI: Reliable and well-supported</li> <li>Anthropic: Advanced reasoning capabilities</li> <li>Ollama: Local AI for complete privacy</li> </ul>"},{"location":"#advanced-features","title":"Advanced Features","text":"<ul> <li>Request file support for complex scenarios</li> <li>WAF evasion techniques</li> <li>DBMS-specific optimizations</li> <li>Interactive CLI with progress tracking</li> <li>Comprehensive HTML reporting</li> </ul>"},{"location":"#quick-example","title":"Quick Example","text":"<pre><code># Basic SQL injection test\nsqlmap-ai -u \"http://example.com/page.php?id=1\"\n\n# Enhanced mode with request file\nsqlmap-ai --enhanced --adaptive -r request.txt\n\n# Local AI with Ollama\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider ollama\n</code></pre>"},{"location":"#installation","title":"Installation","text":"<pre><code># Install from PyPI\npip install sqlmap-ai\n\n# Or install from source\ngit clone https://github.com/atiilla/sqlmap-ai.git\ncd sqlmap-ai\npip install -e .\n</code></pre>"},{"location":"#getting-started","title":"Getting Started","text":"<ol> <li>Install SQLMap AI - Set up the tool and dependencies</li> <li>Configure AI Providers - Set up your preferred AI provider</li> <li>Run Your First Test - Test a vulnerable application</li> <li>Explore Advanced Features - Learn about adaptive testing and more</li> </ol>"},{"location":"#support","title":"Support","text":"<ul> <li>\ud83d\udcd6 Documentation: This site contains comprehensive guides and examples</li> <li>\ud83d\udc1b Issues: Report bugs on GitHub Issues</li> <li>\ud83d\udcac Discussions: Join the conversation on GitHub Discussions</li> <li>\u2b50 Star: If you find this project useful, please give it a star!</li> </ul>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>This tool is intended for educational and ethical hacking purposes only. Always obtain permission before testing any system or application. The developers are not responsible for any misuse or damage caused by this tool.</p>"},{"location":"#recent-updates","title":"Recent Updates","text":"<ul> <li>v2.0.1: Enhanced request file support</li> <li>v2.0.0: Major release with adaptive testing</li> <li>v1.5.0: Added Ollama support for local AI</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Command Line Reference</li> <li>Configuration Files</li> <li>Troubleshooting</li> <li>Contributing</li> </ul>"},{"location":"OVERVIEW/","title":"SQLMap AI Documentation Overview","text":"<p>This document provides an overview of the comprehensive documentation system created for SQLMap AI using MkDocs with the Material theme.</p>"},{"location":"OVERVIEW/#what-weve-created","title":"\ud83c\udfaf What We've Created","text":"<p>A modern, responsive, and user-friendly documentation system that includes:</p> <ul> <li>\ud83d\udcf1 Responsive Design: Works perfectly on desktop, tablet, and mobile</li> <li>\ud83c\udf19 Dark/Light Mode: Automatic theme switching</li> <li>\ud83d\udd0d Full-Text Search: Fast search across all documentation</li> <li>\ud83d\udcd6 Rich Content: Code highlighting, admonitions, tabs, and more</li> <li>\ud83d\ude80 Fast Loading: Optimized for speed with instant navigation</li> <li>\ud83d\udcca Versioning: Support for multiple documentation versions</li> </ul>"},{"location":"OVERVIEW/#documentation-structure","title":"\ud83d\udcc1 Documentation Structure","text":"<pre><code>docs/\n\u251c\u2500\u2500 mkdocs.yml                 # Main configuration file\n\u251c\u2500\u2500 requirements.txt           # Python dependencies\n\u251c\u2500\u2500 setup_docs.py             # Python setup script\n\u251c\u2500\u2500 start_docs.sh             # Shell setup script\n\u251c\u2500\u2500 README.md                 # Documentation setup guide\n\u251c\u2500\u2500 OVERVIEW.md               # This file\n\u251c\u2500\u2500 index.md                  # Home page\n\u251c\u2500\u2500 getting-started/          # Installation and setup guides\n\u2502   \u251c\u2500\u2500 quick-start.md        # Quick start guide\n\u2502   \u251c\u2500\u2500 installation.md       # Detailed installation guide\n\u2502   \u251c\u2500\u2500 configuration.md      # Configuration guide\n\u2502   \u2514\u2500\u2500 ai-providers.md       # AI providers guide\n\u251c\u2500\u2500 user-guide/              # Usage instructions\n\u2502   \u251c\u2500\u2500 basic-usage.md        # Basic usage guide\n\u2502   \u251c\u2500\u2500 testing-modes.md      # Testing modes (to be created)\n\u2502   \u251c\u2500\u2500 request-files.md      # Request files (to be created)\n\u2502   \u251c\u2500\u2500 advanced-features.md  # Advanced features (to be created)\n\u2502   \u2514\u2500\u2500 adaptive-testing.md   # Adaptive testing (to be created)\n\u251c\u2500\u2500 reference/               # Command reference and configuration\n\u2502   \u251c\u2500\u2500 cli.md               # CLI reference (to be created)\n\u2502   \u251c\u2500\u2500 config-files.md      # Config files reference (to be created)\n\u2502   \u251c\u2500\u2500 ai-providers-reference.md # AI providers reference (to be created)\n\u2502   \u2514\u2500\u2500 troubleshooting.md   # Troubleshooting guide (to be created)\n\u251c\u2500\u2500 examples/                # Code examples and tutorials\n\u2502   \u251c\u2500\u2500 basic-examples.md    # Basic examples (created)\n\u2502   \u251c\u2500\u2500 advanced-examples.md # Advanced examples (to be created)\n\u2502   \u2514\u2500\u2500 real-world-scenarios.md # Real-world scenarios (to be created)\n\u251c\u2500\u2500 development/             # Contributing and development guides\n\u2502   \u251c\u2500\u2500 contributing.md      # Contributing guide (to be created)\n\u2502   \u251c\u2500\u2500 architecture.md      # Architecture guide (to be created)\n\u2502   \u2514\u2500\u2500 api-reference.md     # API reference (to be created)\n\u2514\u2500\u2500 about/                   # License, changelog, etc.\n    \u251c\u2500\u2500 license.md           # License information (to be created)\n    \u2514\u2500\u2500 changelog.md         # Changelog (to be created)\n</code></pre>"},{"location":"OVERVIEW/#getting-started","title":"\ud83d\ude80 Getting Started","text":""},{"location":"OVERVIEW/#quick-start","title":"Quick Start","text":"<ol> <li> <p>Navigate to docs directory:    <pre><code>cd docs\n</code></pre></p> </li> <li> <p>Install dependencies:    <pre><code># Using Python script\npython setup_docs.py install\n\n# Or using shell script\n./start_docs.sh install\n\n# Or manually\npip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Start the documentation server:    <pre><code># Using Python script\npython setup_docs.py serve\n\n# Or using shell script\n./start_docs.sh serve\n\n# Or manually\nmkdocs serve\n</code></pre></p> </li> <li> <p>Open your browser and navigate to <code>http://127.0.0.1:8000</code></p> </li> </ol>"},{"location":"OVERVIEW/#alternative-methods","title":"Alternative Methods","text":""},{"location":"OVERVIEW/#using-python-script","title":"Using Python Script","text":"<pre><code>cd docs\npython setup_docs.py install  # Install dependencies\npython setup_docs.py serve    # Start server\npython setup_docs.py build    # Build for production\npython setup_docs.py check    # Check setup\n</code></pre>"},{"location":"OVERVIEW/#using-shell-script","title":"Using Shell Script","text":"<pre><code>cd docs\n./start_docs.sh install  # Install dependencies\n./start_docs.sh serve    # Start server\n./start_docs.sh build    # Build for production\n./start_docs.sh check    # Check setup\n</code></pre>"},{"location":"OVERVIEW/#manual-commands","title":"Manual Commands","text":"<pre><code>cd docs\npip install -r requirements.txt  # Install dependencies\nmkdocs serve                     # Start server\nmkdocs build                     # Build for production\n</code></pre>"},{"location":"OVERVIEW/#features","title":"\ud83c\udfa8 Features","text":""},{"location":"OVERVIEW/#material-theme-features","title":"Material Theme Features","text":"<ul> <li>Responsive Design: Automatically adapts to screen size</li> <li>Dark/Light Mode: Toggle between themes</li> <li>Search: Full-text search with highlighting</li> <li>Navigation: Sticky navigation with breadcrumbs</li> <li>Code Highlighting: Syntax highlighting for multiple languages</li> <li>Admonitions: Callouts for notes, warnings, and tips</li> <li>Tabs: Organize content in tabbed sections</li> <li>Grids: Responsive grid layouts</li> <li>Cards: Feature cards and callouts</li> </ul>"},{"location":"OVERVIEW/#custom-features","title":"Custom Features","text":"<ul> <li>AI Provider Integration: Documentation for all AI providers</li> <li>Interactive Examples: Real-world usage examples</li> <li>Configuration Wizards: Step-by-step setup guides</li> <li>Troubleshooting: Comprehensive troubleshooting section</li> <li>API Reference: Complete API documentation</li> <li>Versioning: Support for multiple versions</li> </ul>"},{"location":"OVERVIEW/#content-structure","title":"\ud83d\udcdd Content Structure","text":""},{"location":"OVERVIEW/#home-page-indexmd","title":"Home Page (<code>index.md</code>)","text":"<ul> <li>Hero section with quick links</li> <li>Feature overview</li> <li>Getting started guide</li> <li>Support information</li> </ul>"},{"location":"OVERVIEW/#getting-started-section","title":"Getting Started Section","text":"<ul> <li>Quick Start: Step-by-step setup guide</li> <li>Installation: Detailed installation instructions</li> <li>Configuration: Configuration options and best practices</li> <li>AI Providers: Guide to setting up AI providers</li> </ul>"},{"location":"OVERVIEW/#user-guide-section","title":"User Guide Section","text":"<ul> <li>Basic Usage: Fundamental commands and features</li> <li>Testing Modes: Different testing approaches</li> <li>Request Files: Working with captured requests</li> <li>Advanced Features: Advanced capabilities</li> <li>Adaptive Testing: Intelligent testing strategies</li> </ul>"},{"location":"OVERVIEW/#reference-section","title":"Reference Section","text":"<ul> <li>CLI Reference: Complete command-line reference</li> <li>Configuration Files: Configuration file formats</li> <li>AI Providers: Detailed provider information</li> <li>Troubleshooting: Common issues and solutions</li> </ul>"},{"location":"OVERVIEW/#examples-section","title":"Examples Section","text":"<ul> <li>Basic Examples: Simple usage examples</li> <li>Advanced Examples: Complex scenarios</li> <li>Real-world Scenarios: Practical use cases</li> </ul>"},{"location":"OVERVIEW/#development-section","title":"Development Section","text":"<ul> <li>Contributing: How to contribute to the project</li> <li>Architecture: System architecture overview</li> <li>API Reference: Developer API documentation</li> </ul>"},{"location":"OVERVIEW/#configuration","title":"\ud83d\udd27 Configuration","text":""},{"location":"OVERVIEW/#mkdocs-configuration-mkdocsyml","title":"MkDocs Configuration (<code>mkdocs.yml</code>)","text":"<p>The configuration includes: - Material theme with custom styling - Navigation structure - Search functionality - Code highlighting - Admonitions and tabs - Social links - Versioning support</p>"},{"location":"OVERVIEW/#theme-customization","title":"Theme Customization","text":"<ul> <li>Primary Color: Indigo</li> <li>Dark Mode: Automatic switching</li> <li>Features: All Material theme features enabled</li> <li>Extensions: PyMdown extensions for rich content</li> </ul>"},{"location":"OVERVIEW/#content-guidelines","title":"\ud83d\udcda Content Guidelines","text":""},{"location":"OVERVIEW/#writing-style","title":"Writing Style","text":"<ul> <li>Clear and concise language</li> <li>Practical examples</li> <li>Step-by-step instructions</li> <li>Visual aids where helpful</li> </ul>"},{"location":"OVERVIEW/#code-examples","title":"Code Examples","text":"<ul> <li>Proper syntax highlighting</li> <li>Real-world scenarios</li> <li>Expected outputs</li> <li>Error handling</li> </ul>"},{"location":"OVERVIEW/#structure","title":"Structure","text":"<ul> <li>Logical flow from basic to advanced</li> <li>Cross-references between sections</li> <li>Consistent formatting</li> <li>Regular updates</li> </ul>"},{"location":"OVERVIEW/#deployment","title":"\ud83d\ude80 Deployment","text":""},{"location":"OVERVIEW/#local-development","title":"Local Development","text":"<pre><code>mkdocs serve  # Development server with auto-reload\n</code></pre>"},{"location":"OVERVIEW/#production-build","title":"Production Build","text":"<pre><code>mkdocs build  # Build static site\n</code></pre>"},{"location":"OVERVIEW/#github-pages-deployment","title":"GitHub Pages Deployment","text":"<pre><code>mkdocs gh-deploy  # Deploy to GitHub Pages\n</code></pre>"},{"location":"OVERVIEW/#custom-domain","title":"Custom Domain","text":"<pre><code>mkdocs gh-deploy --custom-domain docs.sqlmap-ai.com\n</code></pre>"},{"location":"OVERVIEW/#search-and-navigation","title":"\ud83d\udd0d Search and Navigation","text":""},{"location":"OVERVIEW/#search-features","title":"Search Features","text":"<ul> <li>Full-text search across all content</li> <li>Search result highlighting</li> <li>Search suggestions</li> <li>Search sharing</li> </ul>"},{"location":"OVERVIEW/#navigation-features","title":"Navigation Features","text":"<ul> <li>Sticky navigation</li> <li>Breadcrumb navigation</li> <li>Section navigation</li> <li>Previous/next navigation</li> </ul>"},{"location":"OVERVIEW/#mobile-support","title":"\ud83d\udcf1 Mobile Support","text":"<p>The documentation is fully responsive and includes: - Mobile-optimized layout - Touch-friendly navigation - Readable typography - Fast loading times</p>"},{"location":"OVERVIEW/#browser-support","title":"\ud83c\udf10 Browser Support","text":"<ul> <li>Chrome/Chromium (recommended)</li> <li>Firefox</li> <li>Safari</li> <li>Edge</li> <li>Mobile browsers</li> </ul>"},{"location":"OVERVIEW/#customization","title":"\ud83d\udd27 Customization","text":""},{"location":"OVERVIEW/#adding-new-pages","title":"Adding New Pages","text":"<ol> <li>Create Markdown file in appropriate directory</li> <li>Add to navigation in <code>mkdocs.yml</code></li> <li>Use Material theme features for rich content</li> </ol>"},{"location":"OVERVIEW/#styling","title":"Styling","text":"<ul> <li>Use admonitions: <code>!!! note</code>, <code>!!! warning</code>, <code>!!! danger</code></li> <li>Use tabs: <code>=== \"Tab 1\"</code> syntax</li> <li>Use grids: <code>{ .grid }</code> classes</li> <li>Use cards: <code>{ .cards }</code> classes</li> </ul>"},{"location":"OVERVIEW/#code-blocks","title":"Code Blocks","text":"<pre><code># Python example\nimport sqlmap_ai\n</code></pre> <pre><code># Bash example\nsqlmap-ai -u \"http://example.com\"\n</code></pre> <pre><code># YAML configuration\nversion: \"2.0\"\n</code></pre>"},{"location":"OVERVIEW/#analytics-and-monitoring","title":"\ud83d\udcca Analytics and Monitoring","text":"<p>The documentation can be enhanced with: - Google Analytics - Search analytics - User feedback - Performance monitoring</p>"},{"location":"OVERVIEW/#maintenance","title":"\ud83d\udd04 Maintenance","text":""},{"location":"OVERVIEW/#regular-tasks","title":"Regular Tasks","text":"<ul> <li>Update content based on new features</li> <li>Review and fix broken links</li> <li>Update examples and screenshots</li> <li>Monitor user feedback</li> </ul>"},{"location":"OVERVIEW/#version-management","title":"Version Management","text":"<ul> <li>Use Mike for versioning</li> <li>Maintain multiple versions</li> <li>Archive old versions</li> <li>Update version selector</li> </ul>"},{"location":"OVERVIEW/#next-steps","title":"\ud83c\udfaf Next Steps","text":""},{"location":"OVERVIEW/#immediate-actions","title":"Immediate Actions","text":"<ol> <li>Install dependencies and test locally</li> <li>Review content for accuracy and completeness</li> <li>Add missing sections (marked as \"to be created\")</li> <li>Test on different devices and browsers</li> </ol>"},{"location":"OVERVIEW/#future-enhancements","title":"Future Enhancements","text":"<ol> <li>Add more examples and real-world scenarios</li> <li>Create video tutorials and screencasts</li> <li>Add interactive demos and playground</li> <li>Implement user feedback system</li> </ol>"},{"location":"OVERVIEW/#content-expansion","title":"Content Expansion","text":"<ol> <li>API Reference: Complete API documentation</li> <li>Architecture Guide: System design and components</li> <li>Contributing Guide: How to contribute to the project</li> <li>Troubleshooting: Comprehensive troubleshooting guide</li> </ol>"},{"location":"OVERVIEW/#support","title":"\ud83d\udcde Support","text":"<p>For documentation issues: - Check the troubleshooting guide - Review the configuration - Test with different browsers - Report issues on GitHub</p>"},{"location":"OVERVIEW/#conclusion","title":"\ud83c\udf89 Conclusion","text":"<p>This documentation system provides a comprehensive, modern, and user-friendly way to learn about SQLMap AI. It's designed to be:</p> <ul> <li>Easy to use: Simple setup and navigation</li> <li>Comprehensive: Covers all aspects of the tool</li> <li>Responsive: Works on all devices</li> <li>Maintainable: Easy to update and extend</li> <li>Professional: Modern design and features</li> </ul> <p>The documentation will help users quickly understand and effectively use SQLMap AI for their SQL injection testing needs.</p>"},{"location":"examples/basic-examples/","title":"Basic Examples","text":"<p>This page contains practical examples of using SQLMap AI for SQL injection testing. These examples range from simple to advanced scenarios.</p>"},{"location":"examples/basic-examples/#example-1-basic-url-testing","title":"Example 1: Basic URL Testing","text":""},{"location":"examples/basic-examples/#simple-get-parameter-test","title":"Simple GET Parameter Test","text":"<p>Test a basic URL with GET parameters:</p> <pre><code># Test a vulnerable website\nsqlmap-ai -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\"\n</code></pre> <p>Expected Output: <pre><code>\ud83d\ude80 SQLMap AI - AI-Powered SQL Injection Testing\n================================================\n\n\ud83d\udccb Target Information:\n   URL: http://testphp.vulnweb.com/listproducts.php?cat=1\n   Method: GET\n   Parameter: cat\n\n\ud83e\udd16 AI Provider: Groq (Auto-selected)\n\n\ud83d\udd04 Starting Enhanced Mode...\n   \u251c\u2500 Initial Assessment: Checking for SQL injection vulnerabilities\n   \u251c\u2500 DBMS Identification: Detecting database type\n   \u251c\u2500 Enhanced Testing: Applying advanced techniques\n   \u2514\u2500 AI Analysis: Generating insights and recommendations\n\n\u2705 Results:\n   \u251c\u2500 Vulnerable Parameters: cat (GET)\n   \u251c\u2500 DBMS: MySQL &gt;= 5.6\n   \u251c\u2500 Techniques: Boolean-based blind, time-based blind\n   \u2514\u2500 Risk Level: HIGH\n</code></pre></p>"},{"location":"examples/basic-examples/#multiple-parameter-testing","title":"Multiple Parameter Testing","text":"<p>Test URLs with multiple parameters:</p> <pre><code># Test all parameters\nsqlmap-ai -u \"http://example.com/search.php?query=test&amp;category=1&amp;sort=name\"\n\n# Test specific parameters only\nsqlmap-ai -u \"http://example.com/search.php?query=test&amp;category=1\" --param-exclude=sort\n</code></pre>"},{"location":"examples/basic-examples/#example-2-request-file-testing","title":"Example 2: Request File Testing","text":""},{"location":"examples/basic-examples/#post-request-testing","title":"POST Request Testing","text":"<p>Test using a captured HTTP request:</p> <pre><code># Test with request file\nsqlmap-ai -r login_request.txt\n</code></pre> <p>Request File Content (<code>login_request.txt</code>): <pre><code>POST /login.php HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 38\n\nusername=admin&amp;password=test\n</code></pre></p>"},{"location":"examples/basic-examples/#json-request-testing","title":"JSON Request Testing","text":"<p>Test POST requests with JSON data:</p> <pre><code># Test JSON API endpoint\nsqlmap-ai -r api_request.txt\n</code></pre> <p>Request File Content (<code>api_request.txt</code>): <pre><code>POST /api/search HTTP/1.1\nHost: api.example.com\nContent-Type: application/json\nContent-Length: 45\n\n{\"query\": \"test\", \"limit\": 10, \"offset\": 0}\n</code></pre></p>"},{"location":"examples/basic-examples/#example-3-ai-provider-selection","title":"Example 3: AI Provider Selection","text":""},{"location":"examples/basic-examples/#using-specific-ai-provider","title":"Using Specific AI Provider","text":"<pre><code># Use Groq (fastest)\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider groq\n\n# Use OpenAI\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider openai\n\n# Use Anthropic (Claude)\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider anthropic\n\n# Use Ollama (local)\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider ollama\n</code></pre>"},{"location":"examples/basic-examples/#ollama-with-specific-model","title":"Ollama with Specific Model","text":"<pre><code># Use specific Ollama model\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --ai-provider ollama \\\n  --ollama-model codellama\n</code></pre>"},{"location":"examples/basic-examples/#example-4-testing-modes","title":"Example 4: Testing Modes","text":""},{"location":"examples/basic-examples/#enhanced-mode-default","title":"Enhanced Mode (Default)","text":"<pre><code># Full AI-powered testing\nsqlmap-ai --enhanced -u \"http://example.com/page.php?id=1\"\n\n# With request file\nsqlmap-ai --enhanced -r request.txt\n</code></pre>"},{"location":"examples/basic-examples/#simple-mode","title":"Simple Mode","text":"<pre><code># Basic SQLMap without AI\nsqlmap-ai --simple -u \"http://example.com/page.php?id=1\"\n\n# Quick batch mode\nsqlmap-ai --simple -r request.txt --batch\n</code></pre>"},{"location":"examples/basic-examples/#adaptive-mode","title":"Adaptive Mode","text":"<pre><code># Intelligent step-by-step testing\nsqlmap-ai --adaptive -u \"http://example.com/page.php?id=1\"\n\n# With specific AI provider\nsqlmap-ai --adaptive -r request.txt --ai-provider groq\n</code></pre>"},{"location":"examples/basic-examples/#example-5-advanced-testing-options","title":"Example 5: Advanced Testing Options","text":""},{"location":"examples/basic-examples/#custom-risk-and-level","title":"Custom Risk and Level","text":"<pre><code># High-risk, high-level testing\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --risk 3 \\\n  --level 5 \\\n  --threads 10\n</code></pre>"},{"location":"examples/basic-examples/#timeout-and-performance","title":"Timeout and Performance","text":"<pre><code># Set custom timeout and threads\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --timeout 60 \\\n  --threads 8 \\\n  --max-retries 3\n</code></pre>"},{"location":"examples/basic-examples/#output-and-reporting","title":"Output and Reporting","text":"<pre><code># Save results to specific directory\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --output-dir ./my_results \\\n  --html-report \\\n  --verbose\n</code></pre>"},{"location":"examples/basic-examples/#example-6-authentication-testing","title":"Example 6: Authentication Testing","text":""},{"location":"examples/basic-examples/#session-based-authentication","title":"Session-Based Authentication","text":"<pre><code># Test with session cookie\nsqlmap-ai -u \"http://example.com/admin.php\" \\\n  --cookie=\"session=abc123; user=admin\"\n</code></pre>"},{"location":"examples/basic-examples/#header-based-authentication","title":"Header-Based Authentication","text":"<pre><code># Test with authorization header\nsqlmap-ai -r request.txt \\\n  --headers=\"Authorization: Bearer token123\"\n</code></pre>"},{"location":"examples/basic-examples/#form-based-authentication","title":"Form-Based Authentication","text":"<pre><code># Test login form\nsqlmap-ai -r login_request.txt \\\n  --forms \\\n  --batch\n</code></pre>"},{"location":"examples/basic-examples/#example-7-waf-evasion","title":"Example 7: WAF Evasion","text":""},{"location":"examples/basic-examples/#basic-waf-evasion","title":"Basic WAF Evasion","text":"<pre><code># Enable WAF evasion techniques\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --tamper=space2comment,randomcase\n</code></pre>"},{"location":"examples/basic-examples/#advanced-waf-evasion","title":"Advanced WAF Evasion","text":"<pre><code># Multiple tamper scripts\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --tamper=space2comment,randomcase,space2plus \\\n  --random-agent \\\n  --hpp\n</code></pre>"},{"location":"examples/basic-examples/#example-8-data-extraction","title":"Example 8: Data Extraction","text":""},{"location":"examples/basic-examples/#database-enumeration","title":"Database Enumeration","text":"<pre><code># List databases\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --dbs \\\n  --batch\n\n# List tables\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  -D acuart \\\n  --tables \\\n  --batch\n\n# List columns\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  -D acuart \\\n  -T users \\\n  --columns \\\n  --batch\n</code></pre>"},{"location":"examples/basic-examples/#data-dumping","title":"Data Dumping","text":"<pre><code># Dump specific table\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  -D acuart \\\n  -T users \\\n  --dump \\\n  --batch\n\n# Dump with conditions\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  -D acuart \\\n  -T users \\\n  --where=\"id=1\" \\\n  --dump\n</code></pre>"},{"location":"examples/basic-examples/#example-9-batch-testing","title":"Example 9: Batch Testing","text":""},{"location":"examples/basic-examples/#multiple-urls","title":"Multiple URLs","text":"<pre><code># Test multiple URLs\nsqlmap-ai -m urls.txt --batch\n\n# URLs file content (urls.txt):\n# http://example.com/page1.php?id=1\n# http://example.com/page2.php?id=1\n# http://example.com/page3.php?id=1\n</code></pre>"},{"location":"examples/basic-examples/#multiple-request-files","title":"Multiple Request Files","text":"<pre><code># Test multiple request files\nfor file in requests/*.txt; do\n  sqlmap-ai -r \"$file\" --batch --output-dir \"./results/$(basename $file .txt)\"\ndone\n</code></pre>"},{"location":"examples/basic-examples/#example-10-integration-examples","title":"Example 10: Integration Examples","text":""},{"location":"examples/basic-examples/#with-burp-suite","title":"With Burp Suite","text":"<ol> <li>Capture request in Burp Suite</li> <li>Save as .txt file</li> <li>Test with SQLMap AI:    <pre><code>sqlmap-ai -r burp_request.txt --enhanced\n</code></pre></li> </ol>"},{"location":"examples/basic-examples/#with-owasp-zap","title":"With OWASP ZAP","text":"<ol> <li>Export request from ZAP</li> <li>Test with SQLMap AI:    <pre><code>sqlmap-ai -r zap_request.txt --adaptive\n</code></pre></li> </ol>"},{"location":"examples/basic-examples/#with-browser-developer-tools","title":"With Browser Developer Tools","text":"<ol> <li>Open Developer Tools (F12)</li> <li>Go to Network tab</li> <li>Copy request as cURL</li> <li>Convert to HTTP format</li> <li>Test with SQLMap AI:    <pre><code>sqlmap-ai -r browser_request.txt\n</code></pre></li> </ol>"},{"location":"examples/basic-examples/#example-11-error-handling","title":"Example 11: Error Handling","text":""},{"location":"examples/basic-examples/#graceful-error-handling","title":"Graceful Error Handling","text":"<pre><code># Continue on errors\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --force \\\n  --batch \\\n  --max-retries 5\n</code></pre>"},{"location":"examples/basic-examples/#verbose-output-for-debugging","title":"Verbose Output for Debugging","text":"<pre><code># Get detailed output\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --verbose \\\n  --debug \\\n  --output-dir ./debug_results\n</code></pre>"},{"location":"examples/basic-examples/#example-12-real-world-scenarios","title":"Example 12: Real-World Scenarios","text":""},{"location":"examples/basic-examples/#e-commerce-site-testing","title":"E-commerce Site Testing","text":"<pre><code># Test product search\nsqlmap-ai -r product_search.txt \\\n  --enhanced \\\n  --ai-provider groq \\\n  --output-dir ./ecommerce_results\n</code></pre>"},{"location":"examples/basic-examples/#admin-panel-testing","title":"Admin Panel Testing","text":"<pre><code># Test admin login\nsqlmap-ai -r admin_login.txt \\\n  --adaptive \\\n  --ai-provider ollama \\\n  --batch\n</code></pre>"},{"location":"examples/basic-examples/#api-testing","title":"API Testing","text":"<pre><code># Test REST API\nsqlmap-ai -r api_endpoint.txt \\\n  --enhanced \\\n  --ai-provider openai \\\n  --headers=\"Content-Type: application/json\"\n</code></pre>"},{"location":"examples/basic-examples/#best-practices","title":"Best Practices","text":""},{"location":"examples/basic-examples/#1-start-simple","title":"1. Start Simple","text":"<pre><code># Always start with simple mode\nsqlmap-ai --simple -u \"http://example.com/page.php?id=1\"\n\n# Then try enhanced mode\nsqlmap-ai --enhanced -u \"http://example.com/page.php?id=1\"\n</code></pre>"},{"location":"examples/basic-examples/#2-use-request-files","title":"2. Use Request Files","text":"<pre><code># Capture real requests for accurate testing\nsqlmap-ai -r captured_request.txt\n</code></pre>"},{"location":"examples/basic-examples/#3-save-results","title":"3. Save Results","text":"<pre><code># Always save your results\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --output-dir ./results \\\n  --html-report\n</code></pre>"},{"location":"examples/basic-examples/#4-monitor-resources","title":"4. Monitor Resources","text":"<pre><code># Use reasonable thread limits\nsqlmap-ai -u \"http://example.com/page.php?id=1\" \\\n  --threads 5 \\\n  --timeout 30\n</code></pre>"},{"location":"examples/basic-examples/#next-steps","title":"Next Steps","text":"<p>After trying these examples:</p> <ol> <li>Advanced Examples: Explore more complex scenarios</li> <li>Real-world Scenarios: See practical use cases</li> <li>Testing Modes: Learn about different testing approaches</li> <li>Request Files: Master request file testing</li> </ol>"},{"location":"getting-started/ai-providers/","title":"AI Providers Guide","text":"<p>SQLMap AI supports multiple AI providers, each with different strengths and use cases. This guide helps you choose and configure the right provider for your needs.</p>"},{"location":"getting-started/ai-providers/#available-providers","title":"Available Providers","text":""},{"location":"getting-started/ai-providers/#provider-comparison","title":"Provider Comparison","text":"Provider Speed Privacy Cost Setup Best For Groq \u26a1 Fastest Cloud Free tier Easy Production use OpenAI \u26a1 Fast Cloud Pay per use Easy Reliability Anthropic \u26a1 Fast Cloud Pay per use Easy Advanced reasoning Ollama Fast \ud83d\udd12 Local Free Medium Privacy-focused"},{"location":"getting-started/ai-providers/#groq-recommended","title":"Groq (Recommended)","text":""},{"location":"getting-started/ai-providers/#overview","title":"Overview","text":"<p>Groq is the fastest AI provider, offering near-instant responses with excellent performance for SQL injection analysis.</p>"},{"location":"getting-started/ai-providers/#setup","title":"Setup","text":"<ol> <li>Get API Key:</li> <li>Visit https://console.groq.com</li> <li>Sign up for a free account</li> <li> <p>Generate an API key</p> </li> <li> <p>Configure Environment:    <pre><code># Add to your .env file\nGROQ_API_KEY=your_groq_api_key_here\n</code></pre></p> </li> <li> <p>Test Configuration:    <pre><code>sqlmap-ai --check-providers\n</code></pre></p> </li> </ol>"},{"location":"getting-started/ai-providers/#usage","title":"Usage","text":"<pre><code># Use Groq explicitly\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider groq\n\n# Auto-select (Groq will be chosen if available)\nsqlmap-ai -u \"http://example.com/page.php?id=1\"\n</code></pre>"},{"location":"getting-started/ai-providers/#advantages","title":"Advantages","text":"<ul> <li>\u26a1 Fastest responses (usually &lt; 1 second)</li> <li>\ud83c\udd93 Free tier available</li> <li>\ud83c\udfaf Excellent for real-time analysis</li> <li>\ud83d\udd27 Easy setup</li> </ul>"},{"location":"getting-started/ai-providers/#limitations","title":"Limitations","text":"<ul> <li>\u2601\ufe0f Cloud-based (requires internet)</li> <li>\ud83d\udcb0 Usage limits on free tier</li> </ul>"},{"location":"getting-started/ai-providers/#openai","title":"OpenAI","text":""},{"location":"getting-started/ai-providers/#overview_1","title":"Overview","text":"<p>OpenAI provides reliable and well-supported AI services with excellent reasoning capabilities.</p>"},{"location":"getting-started/ai-providers/#setup_1","title":"Setup","text":"<ol> <li>Get API Key:</li> <li>Visit https://platform.openai.com</li> <li>Create an account</li> <li> <p>Generate an API key</p> </li> <li> <p>Configure Environment:    <pre><code># Add to your .env file\nOPENAI_API_KEY=your_openai_api_key_here\n</code></pre></p> </li> <li> <p>Test Configuration:    <pre><code>sqlmap-ai --check-providers\n</code></pre></p> </li> </ol>"},{"location":"getting-started/ai-providers/#usage_1","title":"Usage","text":"<pre><code># Use OpenAI explicitly\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider openai\n</code></pre>"},{"location":"getting-started/ai-providers/#advantages_1","title":"Advantages","text":"<ul> <li>\ud83d\udee1\ufe0f Reliable and stable</li> <li>\ud83e\udde0 Excellent reasoning</li> <li>\ud83d\udcda Well-documented</li> <li>\ud83d\udd27 Easy integration</li> </ul>"},{"location":"getting-started/ai-providers/#limitations_1","title":"Limitations","text":"<ul> <li>\ud83d\udcb0 Pay per use (no free tier)</li> <li>\u2601\ufe0f Cloud-based</li> </ul>"},{"location":"getting-started/ai-providers/#anthropic-claude","title":"Anthropic (Claude)","text":""},{"location":"getting-started/ai-providers/#overview_2","title":"Overview","text":"<p>Anthropic's Claude offers advanced reasoning capabilities and is particularly good at complex analysis tasks.</p>"},{"location":"getting-started/ai-providers/#setup_2","title":"Setup","text":"<ol> <li>Get API Key:</li> <li>Visit https://console.anthropic.com</li> <li>Create an account</li> <li> <p>Generate an API key</p> </li> <li> <p>Configure Environment:    <pre><code># Add to your .env file\nANTHROPIC_API_KEY=your_anthropic_api_key_here\n</code></pre></p> </li> <li> <p>Test Configuration:    <pre><code>sqlmap-ai --check-providers\n</code></pre></p> </li> </ol>"},{"location":"getting-started/ai-providers/#usage_2","title":"Usage","text":"<pre><code># Use Anthropic explicitly\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider anthropic\n</code></pre>"},{"location":"getting-started/ai-providers/#advantages_2","title":"Advantages","text":"<ul> <li>\ud83e\udde0 Advanced reasoning</li> <li>\ud83d\udcca Excellent analysis</li> <li>\ud83d\udee1\ufe0f Safety-focused</li> <li>\ud83d\udcda Good documentation</li> </ul>"},{"location":"getting-started/ai-providers/#limitations_2","title":"Limitations","text":"<ul> <li>\ud83d\udcb0 Pay per use</li> <li>\u2601\ufe0f Cloud-based</li> </ul>"},{"location":"getting-started/ai-providers/#ollama-local-ai","title":"Ollama (Local AI)","text":""},{"location":"getting-started/ai-providers/#overview_3","title":"Overview","text":"<p>Ollama runs AI models locally on your machine, providing complete privacy and offline capabilities.</p>"},{"location":"getting-started/ai-providers/#setup_3","title":"Setup","text":"<ol> <li> <p>Install Ollama:    <pre><code># Download from https://ollama.ai/download\n# Or use package manager\n\n# macOS\nbrew install ollama\n\n# Linux\ncurl -fsSL https://ollama.ai/install.sh | sh\n</code></pre></p> </li> <li> <p>Start Ollama Service:    <pre><code>ollama serve\n</code></pre></p> </li> <li> <p>Download a Model:    <pre><code># Recommended models\nollama pull llama3.2\nollama pull codellama\nollama pull mistral\n</code></pre></p> </li> <li> <p>Configure Environment:    <pre><code># Add to your .env file\nENABLE_OLLAMA=true\nOLLAMA_MODEL=llama3.2\nOLLAMA_BASE_URL=http://localhost:11434\n</code></pre></p> </li> <li> <p>Test Configuration:    <pre><code>sqlmap-ai --check-providers\nsqlmap-ai --list-ollama-models\n</code></pre></p> </li> </ol>"},{"location":"getting-started/ai-providers/#usage_3","title":"Usage","text":"<pre><code># Use Ollama explicitly\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider ollama\n\n# With specific model\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider ollama --ollama-model codellama\n</code></pre>"},{"location":"getting-started/ai-providers/#available-models","title":"Available Models","text":"Model Size Speed Quality Use Case llama3.2 4GB Fast Good General use codellama 7GB Medium Excellent Code analysis mistral 4GB Fast Good Balanced qwen2.5 4GB Fast Good Reasoning"},{"location":"getting-started/ai-providers/#advantages_3","title":"Advantages","text":"<ul> <li>\ud83d\udd12 Complete privacy (runs locally)</li> <li>\ud83c\udd93 Free to use</li> <li>\ud83d\udcf4 Works offline</li> <li>\ud83c\udf9b\ufe0f Full control</li> </ul>"},{"location":"getting-started/ai-providers/#limitations_3","title":"Limitations","text":"<ul> <li>\ud83d\udcbe Requires significant RAM (4-8GB)</li> <li>\ud83d\udda5\ufe0f Uses local resources</li> <li>\u2699\ufe0f More complex setup</li> </ul>"},{"location":"getting-started/ai-providers/#configuration","title":"Configuration","text":""},{"location":"getting-started/ai-providers/#environment-variables","title":"Environment Variables","text":"<p>Create a <code>.env</code> file in your project directory:</p> <pre><code># AI Provider API Keys\nGROQ_API_KEY=your_groq_api_key_here\nOPENAI_API_KEY=your_openai_api_key_here\nANTHROPIC_API_KEY=your_anthropic_api_key_here\n\n# Ollama Settings\nENABLE_OLLAMA=true\nOLLAMA_BASE_URL=http://localhost:11434\nOLLAMA_MODEL=llama3.2\n\n# Security Settings\nMAX_REQUESTS_PER_MINUTE=60\nSAFE_MODE=true\nAUDIT_LOGGING=true\n</code></pre>"},{"location":"getting-started/ai-providers/#configuration-wizard","title":"Configuration Wizard","text":"<p>Use the interactive configuration wizard:</p> <pre><code>sqlmap-ai --config-wizard\n</code></pre> <p>This will help you: - Select AI providers - Configure API keys - Set up Ollama models - Configure security settings</p>"},{"location":"getting-started/ai-providers/#provider-selection","title":"Provider Selection","text":""},{"location":"getting-started/ai-providers/#automatic-selection","title":"Automatic Selection","text":"<p>SQLMap AI automatically selects the best available provider:</p> <pre><code># Auto-select best provider\nsqlmap-ai -u \"http://example.com/page.php?id=1\"\n</code></pre> <p>Selection Priority: 1. Groq (if API key available) 2. OpenAI (if API key available) 3. Anthropic (if API key available) 4. Ollama (if enabled and running)</p>"},{"location":"getting-started/ai-providers/#manual-selection","title":"Manual Selection","text":"<p>Specify your preferred provider:</p> <pre><code># Use specific provider\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider groq\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider openai\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider anthropic\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider ollama\n</code></pre>"},{"location":"getting-started/ai-providers/#testing-your-setup","title":"Testing Your Setup","text":""},{"location":"getting-started/ai-providers/#check-available-providers","title":"Check Available Providers","text":"<pre><code>sqlmap-ai --check-providers\n</code></pre> <p>Expected output: <pre><code>\u2705 Groq: Available\n\u2705 OpenAI: Available\n\u2705 Anthropic: Available\n\u2705 Ollama: Available (llama3.2)\n</code></pre></p>"},{"location":"getting-started/ai-providers/#list-ollama-models","title":"List Ollama Models","text":"<pre><code>sqlmap-ai --list-ollama-models\n</code></pre>"},{"location":"getting-started/ai-providers/#validate-configuration","title":"Validate Configuration","text":"<pre><code>sqlmap-ai --validate-config\n</code></pre>"},{"location":"getting-started/ai-providers/#best-practices","title":"Best Practices","text":""},{"location":"getting-started/ai-providers/#for-production-use","title":"For Production Use","text":"<ul> <li>Use Groq for speed and reliability</li> <li>Set up multiple providers for redundancy</li> <li>Monitor API usage and costs</li> <li>Use environment variables for security</li> </ul>"},{"location":"getting-started/ai-providers/#for-privacy-conscious-users","title":"For Privacy-Conscious Users","text":"<ul> <li>Use Ollama for complete privacy</li> <li>Run models locally on your machine</li> <li>Disable cloud providers if needed</li> <li>Use VPN for additional privacy</li> </ul>"},{"location":"getting-started/ai-providers/#for-development","title":"For Development","text":"<ul> <li>Start with Groq (free tier)</li> <li>Test with Ollama for offline work</li> <li>Use configuration wizard for easy setup</li> <li>Save API keys securely</li> </ul>"},{"location":"getting-started/ai-providers/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/ai-providers/#common-issues","title":"Common Issues","text":""},{"location":"getting-started/ai-providers/#no-ai-providers-available","title":"\"No AI providers available\"","text":"<p>Solution: Check your <code>.env</code> file and API keys</p> <pre><code># Check providers\nsqlmap-ai --check-providers\n\n# Validate configuration\nsqlmap-ai --validate-config\n</code></pre>"},{"location":"getting-started/ai-providers/#ollama-not-detected","title":"\"Ollama not detected\"","text":"<p>Solution: Ensure Ollama is running</p> <pre><code># Start Ollama\nollama serve\n\n# Check models\nollama list\n\n# Test connection\ncurl http://localhost:11434/api/tags\n</code></pre>"},{"location":"getting-started/ai-providers/#api-key-invalid","title":"\"API key invalid\"","text":"<p>Solution: Verify your API keys</p> <pre><code># Check environment variables\necho $GROQ_API_KEY\necho $OPENAI_API_KEY\necho $ANTHROPIC_API_KEY\n</code></pre>"},{"location":"getting-started/ai-providers/#getting-help","title":"Getting Help","text":"<ul> <li>Check logs: <code>~/.sqlmap-ai/logs/</code></li> <li>Run diagnostics: <code>sqlmap-ai --install-check</code></li> <li>Validate config: <code>sqlmap-ai --validate-config</code></li> <li>Report issues: GitHub Issues</li> </ul>"},{"location":"getting-started/ai-providers/#next-steps","title":"Next Steps","text":"<p>After configuring your AI providers:</p> <ol> <li>Quick Start: Run your first test</li> <li>Basic Usage: Learn how to use SQLMap AI</li> <li>Testing Modes: Explore different testing approaches</li> <li>Examples: See real-world examples</li> </ol>"},{"location":"getting-started/configuration/","title":"Configuration Guide","text":"<p>Learn how to configure SQLMap AI for optimal performance and security. This guide covers all configuration options and best practices.</p>"},{"location":"getting-started/configuration/#configuration-files","title":"Configuration Files","text":"<p>SQLMap AI uses several configuration files to manage settings:</p> <pre><code>~/.sqlmap-ai/\n\u251c\u2500\u2500 .env                    # Environment variables\n\u251c\u2500\u2500 config.yaml            # Main configuration\n\u2514\u2500\u2500 logs/                  # Log files\n</code></pre>"},{"location":"getting-started/configuration/#environment-variables-env","title":"Environment Variables (.env)","text":"<p>The <code>.env</code> file contains sensitive information like API keys and security settings.</p>"},{"location":"getting-started/configuration/#ai-provider-configuration","title":"AI Provider Configuration","text":"<pre><code># Groq (Recommended - Fastest)\nGROQ_API_KEY=your_groq_api_key_here\n\n# OpenAI\nOPENAI_API_KEY=your_openai_api_key_here\n\n# Anthropic (Claude)\nANTHROPIC_API_KEY=your_anthropic_api_key_here\n\n# Ollama (Local AI)\nENABLE_OLLAMA=true\nOLLAMA_BASE_URL=http://localhost:11434\nOLLAMA_MODEL=llama3.2\n</code></pre>"},{"location":"getting-started/configuration/#security-settings","title":"Security Settings","text":"<pre><code># Rate limiting\nMAX_REQUESTS_PER_MINUTE=60\n\n# Safety features\nSAFE_MODE=true\nAUDIT_LOGGING=true\n\n# Network settings\nREQUEST_TIMEOUT=30\nMAX_RETRIES=3\n</code></pre>"},{"location":"getting-started/configuration/#advanced-settings","title":"Advanced Settings","text":"<pre><code># Logging\nLOG_LEVEL=INFO\nLOG_FILE=~/.sqlmap-ai/logs/sqlmap_ai.log\n\n# Output\nDEFAULT_OUTPUT_DIR=./results\nHTML_REPORT_ENABLED=true\n\n# Performance\nDEFAULT_THREADS=5\nDEFAULT_TIMEOUT=120\n</code></pre>"},{"location":"getting-started/configuration/#main-configuration-configyaml","title":"Main Configuration (config.yaml)","text":"<p>The <code>config.yaml</code> file contains non-sensitive configuration options.</p>"},{"location":"getting-started/configuration/#basic-configuration","title":"Basic Configuration","text":"<pre><code>version: \"2.0\"\n\n# Security settings\nsecurity:\n  safe_mode: true\n  max_requests_per_minute: 60\n  audit_logging: true\n  request_timeout: 30\n  max_retries: 3\n\n# SQLMap settings\nsqlmap:\n  default_timeout: 120\n  default_risk: 1\n  default_level: 1\n  default_threads: 5\n  batch_mode: false\n  force: false\n\n# AI settings\nai:\n  default_provider: \"auto\"\n  enable_analysis: true\n  enable_recommendations: true\n  analysis_timeout: 30\n\n# UI settings\nui:\n  show_banner: true\n  interactive_mode: false\n  progress_bars: true\n  color_output: true\n\n# Output settings\noutput:\n  default_directory: \"./results\"\n  html_report: true\n  json_report: true\n  log_file: true\n  screenshots: false\n</code></pre>"},{"location":"getting-started/configuration/#advanced-configuration","title":"Advanced Configuration","text":"<pre><code># Database settings\ndatabase:\n  enabled: false\n  type: \"sqlite\"\n  path: \"~/.sqlmap-ai/database.db\"\n\n# Proxy settings\nproxy:\n  enabled: false\n  http: \"\"\n  https: \"\"\n  username: \"\"\n  password: \"\"\n\n# Custom headers\nheaders:\n  User-Agent: \"SQLMap AI/2.0.1\"\n  Accept: \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\"\n  Accept-Language: \"en-US,en;q=0.5\"\n  Accept-Encoding: \"gzip, deflate\"\n\n# Tamper scripts\ntamper:\n  enabled: false\n  scripts: []\n  custom_scripts: []\n\n# WAF evasion\nwaf_evasion:\n  enabled: true\n  techniques:\n    - \"randomcase\"\n    - \"space2comment\"\n    - \"space2plus\"\n  custom_techniques: []\n</code></pre>"},{"location":"getting-started/configuration/#configuration-wizard","title":"Configuration Wizard","text":"<p>Use the interactive configuration wizard for easy setup:</p> <pre><code>sqlmap-ai --config-wizard\n</code></pre> <p>The wizard will guide you through:</p> <ol> <li>AI Provider Selection</li> <li>Choose your preferred AI providers</li> <li>Configure API keys</li> <li> <p>Test provider connectivity</p> </li> <li> <p>Security Settings</p> </li> <li>Set rate limiting</li> <li>Configure safe mode</li> <li> <p>Enable audit logging</p> </li> <li> <p>SQLMap Options</p> </li> <li>Set default risk and level</li> <li>Configure timeouts</li> <li> <p>Set thread count</p> </li> <li> <p>Output Settings</p> </li> <li>Choose output directory</li> <li>Enable/disable reports</li> <li> <p>Configure logging</p> </li> <li> <p>Advanced Options</p> </li> <li>Proxy settings</li> <li>Custom headers</li> <li>Tamper scripts</li> </ol>"},{"location":"getting-started/configuration/#command-line-configuration","title":"Command Line Configuration","text":"<p>You can override configuration settings via command line:</p>"},{"location":"getting-started/configuration/#ai-provider-options","title":"AI Provider Options","text":"<pre><code># Select AI provider\nsqlmap-ai -u \"http://example.com\" --ai-provider groq\n\n# Set Ollama model\nsqlmap-ai -u \"http://example.com\" --ai-provider ollama --ollama-model codellama\n\n# Disable AI analysis\nsqlmap-ai -u \"http://example.com\" --no-ai\n</code></pre>"},{"location":"getting-started/configuration/#security-options","title":"Security Options","text":"<pre><code># Set rate limit\nsqlmap-ai -u \"http://example.com\" --max-requests 30\n\n# Disable safe mode\nsqlmap-ai -u \"http://example.com\" --no-safe-mode\n\n# Enable audit logging\nsqlmap-ai -u \"http://example.com\" --audit-log\n</code></pre>"},{"location":"getting-started/configuration/#sqlmap-options","title":"SQLMap Options","text":"<pre><code># Set risk and level\nsqlmap-ai -u \"http://example.com\" --risk 3 --level 5\n\n# Set threads and timeout\nsqlmap-ai -u \"http://example.com\" --threads 10 --timeout 60\n\n# Enable batch mode\nsqlmap-ai -u \"http://example.com\" --batch\n</code></pre>"},{"location":"getting-started/configuration/#output-options","title":"Output Options","text":"<pre><code># Set output directory\nsqlmap-ai -u \"http://example.com\" --output-dir ./my_results\n\n# Generate HTML report\nsqlmap-ai -u \"http://example.com\" --html-report\n\n# Enable verbose output\nsqlmap-ai -u \"http://example.com\" --verbose\n</code></pre>"},{"location":"getting-started/configuration/#configuration-validation","title":"Configuration Validation","text":""},{"location":"getting-started/configuration/#validate-configuration","title":"Validate Configuration","text":"<p>Check if your configuration is valid:</p> <pre><code>sqlmap-ai --validate-config\n</code></pre> <p>This will check: - Environment variables - Configuration file syntax - AI provider connectivity - File permissions</p>"},{"location":"getting-started/configuration/#check-ai-providers","title":"Check AI Providers","text":"<p>Verify AI provider setup:</p> <pre><code>sqlmap-ai --check-providers\n</code></pre> <p>Expected output: <pre><code>\u2705 Groq: Available\n\u2705 OpenAI: Available\n\u2705 Anthropic: Available\n\u2705 Ollama: Available (llama3.2)\n</code></pre></p>"},{"location":"getting-started/configuration/#test-configuration","title":"Test Configuration","text":"<p>Run a test with your configuration:</p> <pre><code># Test with sample target\nsqlmap-ai -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\" --test-config\n</code></pre>"},{"location":"getting-started/configuration/#best-practices","title":"Best Practices","text":""},{"location":"getting-started/configuration/#security-configuration","title":"Security Configuration","text":"<ol> <li> <p>Use Environment Variables <pre><code># Good: Use .env file\nGROQ_API_KEY=your_key_here\n\n# Bad: Hardcode in scripts\nexport GROQ_API_KEY=\"your_key_here\"\n</code></pre></p> </li> <li> <p>Enable Safe Mode <pre><code>security:\n  safe_mode: true\n  max_requests_per_minute: 60\n</code></pre></p> </li> <li> <p>Use Rate Limiting <pre><code># Set reasonable limits\nMAX_REQUESTS_PER_MINUTE=60\nREQUEST_TIMEOUT=30\n</code></pre></p> </li> </ol>"},{"location":"getting-started/configuration/#performance-configuration","title":"Performance Configuration","text":"<ol> <li> <p>Optimize Threads <pre><code>sqlmap:\n  default_threads: 5  # Adjust based on system\n</code></pre></p> </li> <li> <p>Set Timeouts <pre><code>sqlmap:\n  default_timeout: 120\nai:\n  analysis_timeout: 30\n</code></pre></p> </li> <li> <p>Enable Caching <pre><code>cache:\n  enabled: true\n  ttl: 3600  # 1 hour\n</code></pre></p> </li> </ol>"},{"location":"getting-started/configuration/#privacy-configuration","title":"Privacy Configuration","text":"<ol> <li> <p>Use Local AI <pre><code># Enable Ollama for privacy\nENABLE_OLLAMA=true\nOLLAMA_MODEL=llama3.2\n</code></pre></p> </li> <li> <p>Disable Cloud Providers <pre><code># Comment out cloud API keys\n# GROQ_API_KEY=your_key_here\n# OPENAI_API_KEY=your_key_here\n</code></pre></p> </li> <li> <p>Use Proxy <pre><code>proxy:\n  enabled: true\n  http: \"http://proxy:8080\"\n  https: \"https://proxy:8080\"\n</code></pre></p> </li> </ol>"},{"location":"getting-started/configuration/#configuration-examples","title":"Configuration Examples","text":""},{"location":"getting-started/configuration/#development-configuration","title":"Development Configuration","text":"<pre><code># config.yaml\nversion: \"2.0\"\nsecurity:\n  safe_mode: true\n  max_requests_per_minute: 30\nsqlmap:\n  default_risk: 1\n  default_level: 1\n  default_threads: 3\nai:\n  default_provider: \"groq\"\noutput:\n  default_directory: \"./dev_results\"\n  html_report: true\n</code></pre>"},{"location":"getting-started/configuration/#production-configuration","title":"Production Configuration","text":"<pre><code># config.yaml\nversion: \"2.0\"\nsecurity:\n  safe_mode: true\n  max_requests_per_minute: 100\n  audit_logging: true\nsqlmap:\n  default_risk: 2\n  default_level: 3\n  default_threads: 10\nai:\n  default_provider: \"auto\"\noutput:\n  default_directory: \"./production_results\"\n  html_report: true\n  json_report: true\n</code></pre>"},{"location":"getting-started/configuration/#privacy-focused-configuration","title":"Privacy-Focused Configuration","text":"<pre><code># config.yaml\nversion: \"2.0\"\nsecurity:\n  safe_mode: true\n  max_requests_per_minute: 60\nai:\n  default_provider: \"ollama\"\n  enable_analysis: true\noutput:\n  default_directory: \"./private_results\"\n  html_report: false\n  json_report: true\n</code></pre>"},{"location":"getting-started/configuration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/configuration/#common-configuration-issues","title":"Common Configuration Issues","text":""},{"location":"getting-started/configuration/#configuration-file-not-found","title":"\"Configuration file not found\"","text":"<p>Solution: Run the configuration wizard <pre><code>sqlmap-ai --config-wizard\n</code></pre></p>"},{"location":"getting-started/configuration/#invalid-yaml-syntax","title":"\"Invalid YAML syntax\"","text":"<p>Solution: Validate YAML syntax <pre><code># Use online YAML validator\n# Or check with Python\npython -c \"import yaml; yaml.safe_load(open('config.yaml'))\"\n</code></pre></p>"},{"location":"getting-started/configuration/#permission-denied","title":"\"Permission denied\"","text":"<p>Solution: Check file permissions <pre><code># Fix permissions\nchmod 600 ~/.sqlmap-ai/.env\nchmod 644 ~/.sqlmap-ai/config.yaml\n</code></pre></p>"},{"location":"getting-started/configuration/#getting-help","title":"Getting Help","text":"<ul> <li>Validate config: <code>sqlmap-ai --validate-config</code></li> <li>Check providers: <code>sqlmap-ai --check-providers</code></li> <li>Run wizard: <code>sqlmap-ai --config-wizard</code></li> <li>View logs: <code>~/.sqlmap-ai/logs/</code></li> </ul>"},{"location":"getting-started/configuration/#next-steps","title":"Next Steps","text":"<p>After configuring SQLMap AI:</p> <ol> <li>Quick Start: Test your configuration</li> <li>Basic Usage: Learn how to use the tool</li> <li>Testing Modes: Explore different testing approaches</li> <li>Examples: See real-world examples</li> </ol>"},{"location":"getting-started/installation/","title":"Installation Guide","text":"<p>This guide covers all installation methods for SQLMap AI, including system requirements, dependencies, and troubleshooting.</p>"},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":""},{"location":"getting-started/installation/#minimum-requirements","title":"Minimum Requirements","text":"<ul> <li>Python: 3.8 or higher</li> <li>RAM: 2GB (4GB recommended for Ollama)</li> <li>Storage: 500MB free space</li> <li>Network: Internet connection for cloud AI providers</li> </ul>"},{"location":"getting-started/installation/#recommended-requirements","title":"Recommended Requirements","text":"<ul> <li>Python: 3.11 or higher</li> <li>RAM: 8GB (for optimal performance with Ollama)</li> <li>Storage: 2GB free space</li> <li>OS: Linux, macOS, or Windows 10/11</li> </ul>"},{"location":"getting-started/installation/#installation-methods","title":"Installation Methods","text":""},{"location":"getting-started/installation/#method-1-pypi-installation-recommended","title":"Method 1: PyPI Installation (Recommended)","text":"<p>The easiest way to install SQLMap AI is through PyPI:</p> <pre><code>pip install sqlmap-ai\n</code></pre>"},{"location":"getting-started/installation/#verify-installation","title":"Verify Installation","text":"<pre><code>sqlmap-ai --version\n</code></pre> <p>Expected output: <pre><code>SQLMap AI v2.0.1\n</code></pre></p>"},{"location":"getting-started/installation/#method-2-source-installation","title":"Method 2: Source Installation","text":"<p>For development or to get the latest features:</p> <pre><code># Clone the repository\ngit clone https://github.com/atiilla/sqlmap-ai.git\ncd sqlmap-ai\n\n# Install in development mode\npip install -e .\n</code></pre>"},{"location":"getting-started/installation/#method-3-virtual-environment-recommended","title":"Method 3: Virtual Environment (Recommended)","text":"<p>It's recommended to use a virtual environment to avoid conflicts:</p> <pre><code># Create virtual environment\npython -m venv sqlmap-ai-env\n\n# Activate virtual environment\n# On Windows:\nsqlmap-ai-env\\Scripts\\activate\n# On macOS/Linux:\nsource sqlmap-ai-env/bin/activate\n\n# Install SQLMap AI\npip install sqlmap-ai\n</code></pre>"},{"location":"getting-started/installation/#dependencies","title":"Dependencies","text":"<p>SQLMap AI automatically installs these dependencies:</p>"},{"location":"getting-started/installation/#core-dependencies","title":"Core Dependencies","text":"<ul> <li>python-dotenv: Environment variable management</li> <li>requests: HTTP library</li> <li>pyyaml: YAML configuration files</li> <li>rich: Beautiful terminal output</li> <li>jinja2: HTML report templates</li> <li>cryptography: Security features</li> </ul>"},{"location":"getting-started/installation/#ai-provider-dependencies","title":"AI Provider Dependencies","text":"<ul> <li>groq: Groq AI API client</li> <li>openai: OpenAI API client</li> <li>anthropic: Anthropic API client</li> </ul>"},{"location":"getting-started/installation/#optional-dependencies","title":"Optional Dependencies","text":"<p>Install additional features:</p> <pre><code># Development dependencies\npip install sqlmap-ai[dev]\n\n# Local LLM support\npip install sqlmap-ai[local-llm]\n\n# Enhanced reporting\npip install sqlmap-ai[reporting]\n\n# All optional dependencies\npip install sqlmap-ai[all]\n</code></pre>"},{"location":"getting-started/installation/#platform-specific-installation","title":"Platform-Specific Installation","text":""},{"location":"getting-started/installation/#windows","title":"Windows","text":"<ol> <li>Install Python: Download from python.org</li> <li>Install Git: Download from git-scm.com</li> <li>Open Command Prompt or PowerShell:    <pre><code>pip install sqlmap-ai\n</code></pre></li> </ol>"},{"location":"getting-started/installation/#macos","title":"macOS","text":"<ol> <li> <p>Install Homebrew (if not installed):    <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre></p> </li> <li> <p>Install Python:    <pre><code>brew install python\n</code></pre></p> </li> <li> <p>Install SQLMap AI:    <pre><code>pip3 install sqlmap-ai\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<ol> <li> <p>Update package list:    <pre><code>sudo apt update\n</code></pre></p> </li> <li> <p>Install Python and pip:    <pre><code>sudo apt install python3 python3-pip python3-venv\n</code></pre></p> </li> <li> <p>Install SQLMap AI:    <pre><code>pip3 install sqlmap-ai\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#linux-centosrhelfedora","title":"Linux (CentOS/RHEL/Fedora)","text":"<ol> <li> <p>Install Python:    <pre><code># CentOS/RHEL\nsudo yum install python3 python3-pip\n\n# Fedora\nsudo dnf install python3 python3-pip\n</code></pre></p> </li> <li> <p>Install SQLMap AI:    <pre><code>pip3 install sqlmap-ai\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#post-installation-setup","title":"Post-Installation Setup","text":""},{"location":"getting-started/installation/#1-run-installation-check","title":"1. Run Installation Check","text":"<pre><code>sqlmap-ai --install-check\n</code></pre> <p>This command will: - Verify Python version - Check for required dependencies - Install SQLMap if needed - Create configuration directories - Validate AI provider setup</p>"},{"location":"getting-started/installation/#2-set-up-ai-provider","title":"2. Set Up AI Provider","text":"<p>Choose and configure an AI provider:</p> <pre><code># Check available providers\nsqlmap-ai --check-providers\n\n# Run configuration wizard\nsqlmap-ai --config-wizard\n</code></pre>"},{"location":"getting-started/installation/#3-create-configuration-files","title":"3. Create Configuration Files","text":"<p>The installation check creates these files:</p> <pre><code>~/.sqlmap-ai/\n\u251c\u2500\u2500 .env                    # Environment variables\n\u251c\u2500\u2500 config.yaml            # Main configuration\n\u2514\u2500\u2500 logs/                  # Log files\n</code></pre>"},{"location":"getting-started/installation/#verification","title":"Verification","text":""},{"location":"getting-started/installation/#test-basic-functionality","title":"Test Basic Functionality","text":"<pre><code># Check version\nsqlmap-ai --version\n\n# Show help\nsqlmap-ai --help\n\n# Check AI providers\nsqlmap-ai --check-providers\n\n# Validate configuration\nsqlmap-ai --validate-config\n</code></pre>"},{"location":"getting-started/installation/#test-with-sample-target","title":"Test with Sample Target","text":"<pre><code># Run a basic test\nsqlmap-ai -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\"\n</code></pre>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":""},{"location":"getting-started/installation/#python-version-issues","title":"Python Version Issues","text":"<p>Problem: \"Python 3.8+ required\" Solution: Upgrade Python to 3.8 or higher</p> <pre><code># Check Python version\npython --version\n\n# Install Python 3.11 (recommended)\n# Windows: Download from python.org\n# macOS: brew install python@3.11\n# Linux: sudo apt install python3.11\n</code></pre>"},{"location":"getting-started/installation/#permission-issues","title":"Permission Issues","text":"<p>Problem: \"Permission denied\" during installation Solution: Use virtual environment or user installation</p> <pre><code># User installation (no admin required)\npip install --user sqlmap-ai\n\n# Or use virtual environment\npython -m venv sqlmap-ai-env\nsource sqlmap-ai-env/bin/activate  # Linux/macOS\nsqlmap-ai-env\\Scripts\\activate     # Windows\npip install sqlmap-ai\n</code></pre>"},{"location":"getting-started/installation/#network-issues","title":"Network Issues","text":"<p>Problem: \"Could not find a version that satisfies the requirement\" Solution: Check internet connection and pip configuration</p> <pre><code># Upgrade pip\npip install --upgrade pip\n\n# Use alternative index\npip install -i https://pypi.org/simple/ sqlmap-ai\n</code></pre>"},{"location":"getting-started/installation/#sqlmap-not-found","title":"SQLMap Not Found","text":"<p>Problem: \"SQLMap not detected\" Solution: Install SQLMap manually</p> <pre><code># Install SQLMap\npip install sqlmap\n\n# Or let SQLMap AI install it\nsqlmap-ai --install-check\n</code></pre>"},{"location":"getting-started/installation/#getting-help","title":"Getting Help","text":"<p>If you encounter issues:</p> <ol> <li>Check the logs: <code>~/.sqlmap-ai/logs/</code></li> <li>Run diagnostics: <code>sqlmap-ai --install-check</code></li> <li>Validate config: <code>sqlmap-ai --validate-config</code></li> <li>Report issues: GitHub Issues</li> </ol>"},{"location":"getting-started/installation/#uninstallation","title":"Uninstallation","text":"<p>To remove SQLMap AI:</p> <pre><code># Remove the package\npip uninstall sqlmap-ai\n\n# Remove configuration files (optional)\nrm -rf ~/.sqlmap-ai/\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>After successful installation:</p> <ol> <li>Configure AI Providers: Set up your preferred AI provider</li> <li>Quick Start: Run your first test</li> <li>User Guide: Learn how to use SQLMap AI effectively</li> </ol>"},{"location":"getting-started/installation/#support","title":"Support","text":"<ul> <li>\ud83d\udcd6 Documentation: This site contains comprehensive guides</li> <li>\ud83d\udc1b Issues: Report bugs on GitHub Issues</li> <li>\ud83d\udcac Discussions: Join the conversation on GitHub Discussions</li> </ul>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":"<p>Get up and running with SQLMap AI in minutes! This guide will walk you through installation, configuration, and your first SQL injection test.</p>"},{"location":"getting-started/quick-start/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.8 or higher</li> <li>Internet connection (for cloud AI providers)</li> <li>2GB+ RAM (for Ollama local models)</li> </ul>"},{"location":"getting-started/quick-start/#step-1-installation","title":"Step 1: Installation","text":""},{"location":"getting-started/quick-start/#option-a-install-from-pypi-recommended","title":"Option A: Install from PyPI (Recommended)","text":"<pre><code>pip install sqlmap-ai\n</code></pre>"},{"location":"getting-started/quick-start/#option-b-install-from-source","title":"Option B: Install from Source","text":"<pre><code>git clone https://github.com/atiilla/sqlmap-ai.git\ncd sqlmap-ai\npip install -e .\n</code></pre>"},{"location":"getting-started/quick-start/#verify-installation","title":"Verify Installation","text":"<pre><code>sqlmap-ai --version\n</code></pre>"},{"location":"getting-started/quick-start/#step-2-set-up-ai-provider","title":"Step 2: Set Up AI Provider","text":"<p>Choose one of the following AI providers:</p>"},{"location":"getting-started/quick-start/#groq-recommended-fastest","title":"Groq (Recommended - Fastest)","text":"<ol> <li>Get a free API key from https://console.groq.com</li> <li>Create a <code>.env</code> file in your project directory:</li> </ol> <pre><code>GROQ_API_KEY=your_groq_api_key_here\n</code></pre>"},{"location":"getting-started/quick-start/#openai","title":"OpenAI","text":"<ol> <li>Get an API key from https://platform.openai.com</li> <li>Add to your <code>.env</code> file:</li> </ol> <pre><code>OPENAI_API_KEY=your_openai_api_key_here\n</code></pre>"},{"location":"getting-started/quick-start/#anthropic-claude","title":"Anthropic (Claude)","text":"<ol> <li>Get an API key from https://console.anthropic.com</li> <li>Add to your <code>.env</code> file:</li> </ol> <pre><code>ANTHROPIC_API_KEY=your_anthropic_api_key_here\n</code></pre>"},{"location":"getting-started/quick-start/#ollama-local-ai-privacy-focused","title":"Ollama (Local AI - Privacy Focused)","text":"<ol> <li>Install Ollama: https://ollama.ai/download</li> <li>Start Ollama service:</li> </ol> <pre><code>ollama serve\n</code></pre> <ol> <li>Download a model:</li> </ol> <pre><code>ollama pull llama3.2\n</code></pre> <ol> <li>Enable in your <code>.env</code> file:</li> </ol> <pre><code>ENABLE_OLLAMA=true\nOLLAMA_MODEL=llama3.2\n</code></pre>"},{"location":"getting-started/quick-start/#step-3-run-installation-check","title":"Step 3: Run Installation Check","text":"<pre><code>sqlmap-ai --install-check\n</code></pre> <p>This command will: - Check your AI provider setup - Install SQLMap if needed - Create configuration files - Validate your environment</p>"},{"location":"getting-started/quick-start/#step-4-configure-settings-optional","title":"Step 4: Configure Settings (Optional)","text":"<p>Run the interactive configuration wizard:</p> <pre><code>sqlmap-ai --config-wizard\n</code></pre> <p>This will help you: - Select AI providers - Configure security settings - Set up SQLMap options - Choose Ollama models (if using Ollama)</p>"},{"location":"getting-started/quick-start/#step-5-test-your-setup","title":"Step 5: Test Your Setup","text":""},{"location":"getting-started/quick-start/#check-ai-providers","title":"Check AI Providers","text":"<pre><code>sqlmap-ai --check-providers\n</code></pre> <p>Expected output: <pre><code>\u2705 Groq: Available\n\u2705 OpenAI: Available\n\u2705 Anthropic: Available\n\u2705 Ollama: Available (llama3.2)\n</code></pre></p>"},{"location":"getting-started/quick-start/#list-ollama-models-if-using-ollama","title":"List Ollama Models (if using Ollama)","text":"<pre><code>sqlmap-ai --list-ollama-models\n</code></pre>"},{"location":"getting-started/quick-start/#step-6-your-first-test","title":"Step 6: Your First Test","text":""},{"location":"getting-started/quick-start/#basic-sql-injection-test","title":"Basic SQL Injection Test","text":"<pre><code># Test a vulnerable website\nsqlmap-ai -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\"\n</code></pre>"},{"location":"getting-started/quick-start/#enhanced-mode-with-ai-analysis","title":"Enhanced Mode with AI Analysis","text":"<pre><code># Use enhanced mode for AI-powered testing\nsqlmap-ai --enhanced -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\"\n</code></pre>"},{"location":"getting-started/quick-start/#with-specific-ai-provider","title":"With Specific AI Provider","text":"<pre><code># Use Groq (fastest)\nsqlmap-ai -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\" --ai-provider groq\n\n# Use Ollama (local, private)\nsqlmap-ai -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\" --ai-provider ollama\n</code></pre>"},{"location":"getting-started/quick-start/#step-7-view-results","title":"Step 7: View Results","text":"<p>After running a test, you'll see:</p> <ol> <li>Real-time Progress: Live updates on the testing process</li> <li>AI Analysis: Intelligent insights and recommendations</li> <li>HTML Report: Beautiful report saved to <code>reports/</code> directory</li> <li>Console Output: Detailed results in the terminal</li> </ol>"},{"location":"getting-started/quick-start/#whats-next","title":"What's Next?","text":"<p>Now that you've completed your first test, explore these features:</p> <ul> <li>Testing Modes: Learn about Enhanced, Simple, and Adaptive modes</li> <li>Request Files: Test complex scenarios with captured HTTP requests</li> <li>Advanced Features: Discover adaptive testing and WAF evasion</li> <li>Examples: See more real-world examples</li> </ul>"},{"location":"getting-started/quick-start/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues:</p> <ol> <li>Check AI Providers: <code>sqlmap-ai --check-providers</code></li> <li>Validate Configuration: <code>sqlmap-ai --validate-config</code></li> <li>Re-run Setup: <code>sqlmap-ai --install-check</code></li> <li>See Help: <code>sqlmap-ai --help</code></li> </ol> <p>For more detailed troubleshooting, see the Troubleshooting Guide.</p>"},{"location":"getting-started/quick-start/#example-output","title":"Example Output","text":"<p>Here's what a successful test looks like:</p> <pre><code>$ sqlmap-ai --enhanced -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\"\n\n\ud83d\ude80 SQLMap AI - AI-Powered SQL Injection Testing\n================================================\n\n\ud83d\udccb Target Information:\n   URL: http://testphp.vulnweb.com/listproducts.php?cat=1\n   Method: GET\n   Parameter: cat\n\n\ud83e\udd16 AI Provider: Groq (Auto-selected)\n\n\ud83d\udd04 Starting Enhanced Mode...\n   \u251c\u2500 Initial Assessment: Checking for SQL injection vulnerabilities\n   \u251c\u2500 DBMS Identification: Detecting database type\n   \u251c\u2500 Enhanced Testing: Applying advanced techniques\n   \u2514\u2500 AI Analysis: Generating insights and recommendations\n\n\u2705 Results:\n   \u251c\u2500 Vulnerable Parameters: cat (GET)\n   \u251c\u2500 DBMS: MySQL &gt;= 5.6\n   \u251c\u2500 Techniques: Boolean-based blind, time-based blind\n   \u2514\u2500 Risk Level: HIGH\n\n\ud83d\udcca Report generated: reports/sqlmap_ai_report_20241201_143022.html\n\n\ud83c\udfaf AI Recommendations:\n   - Target is vulnerable to SQL injection\n   - Consider extracting database information\n   - Implement proper input validation\n   - Use parameterized queries\n</code></pre>"},{"location":"user-guide/basic-usage/","title":"Basic Usage Guide","text":"<p>Learn how to use SQLMap AI effectively for SQL injection testing. This guide covers the fundamental commands and features you'll use most often.</p>"},{"location":"user-guide/basic-usage/#command-structure","title":"Command Structure","text":"<p>SQLMap AI follows this basic command structure:</p> <pre><code>sqlmap-ai [MODE] [TARGET] [OPTIONS]\n</code></pre>"},{"location":"user-guide/basic-usage/#basic-components","title":"Basic Components","text":"<ul> <li>MODE: <code>--enhanced</code>, <code>--simple</code>, <code>--adaptive</code> (optional)</li> <li>TARGET: URL (<code>-u</code>) or request file (<code>-r</code>)</li> <li>OPTIONS: AI provider, testing parameters, output options</li> </ul>"},{"location":"user-guide/basic-usage/#basic-commands","title":"Basic Commands","text":""},{"location":"user-guide/basic-usage/#1-simple-url-testing","title":"1. Simple URL Testing","text":"<p>Test a URL for SQL injection vulnerabilities:</p> <pre><code># Basic test\nsqlmap-ai -u \"http://example.com/page.php?id=1\"\n\n# With specific parameter\nsqlmap-ai -u \"http://example.com/search.php?query=test&amp;category=1\"\n</code></pre>"},{"location":"user-guide/basic-usage/#2-request-file-testing","title":"2. Request File Testing","text":"<p>Test using captured HTTP requests:</p> <pre><code># Test with request file\nsqlmap-ai -r request.txt\n\n# Test with specific request file\nsqlmap-ai -r /path/to/captured_request.txt\n</code></pre>"},{"location":"user-guide/basic-usage/#3-testing-modes","title":"3. Testing Modes","text":"<p>Choose your testing approach:</p> <pre><code># Enhanced mode (default) - AI-powered testing\nsqlmap-ai --enhanced -u \"http://example.com/page.php?id=1\"\n\n# Simple mode - Basic SQLMap without AI\nsqlmap-ai --simple -u \"http://example.com/page.php?id=1\"\n\n# Adaptive mode - Intelligent step-by-step testing\nsqlmap-ai --adaptive -u \"http://example.com/page.php?id=1\"\n</code></pre>"},{"location":"user-guide/basic-usage/#ai-provider-selection","title":"AI Provider Selection","text":""},{"location":"user-guide/basic-usage/#automatic-selection","title":"Automatic Selection","text":"<p>SQLMap AI automatically selects the best available AI provider:</p> <pre><code># Auto-select best provider\nsqlmap-ai -u \"http://example.com/page.php?id=1\"\n</code></pre>"},{"location":"user-guide/basic-usage/#manual-selection","title":"Manual Selection","text":"<p>Specify your preferred AI provider:</p> <pre><code># Use Groq (fastest)\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider groq\n\n# Use OpenAI\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider openai\n\n# Use Anthropic (Claude)\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider anthropic\n\n# Use Ollama (local)\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --ai-provider ollama\n</code></pre>"},{"location":"user-guide/basic-usage/#common-options","title":"Common Options","text":""},{"location":"user-guide/basic-usage/#output-and-reporting","title":"Output and Reporting","text":"<pre><code># Save results to file\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --output-dir ./results\n\n# Generate HTML report\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --html-report\n\n# Verbose output\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --verbose\n</code></pre>"},{"location":"user-guide/basic-usage/#testing-parameters","title":"Testing Parameters","text":"<pre><code># Set risk level (1-3, default: 1)\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --risk 2\n\n# Set level (1-5, default: 1)\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --level 3\n\n# Set number of threads\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --threads 10\n\n# Set timeout\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --timeout 30\n</code></pre>"},{"location":"user-guide/basic-usage/#batch-mode","title":"Batch Mode","text":"<p>Run without user interaction:</p> <pre><code># Non-interactive mode\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --batch\n\n# Force continue on errors\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --batch --force\n</code></pre>"},{"location":"user-guide/basic-usage/#practical-examples","title":"Practical Examples","text":""},{"location":"user-guide/basic-usage/#example-1-basic-vulnerability-scan","title":"Example 1: Basic Vulnerability Scan","text":"<pre><code># Scan a vulnerable test site\nsqlmap-ai -u \"http://testphp.vulnweb.com/listproducts.php?cat=1\"\n</code></pre> <p>Expected Output: <pre><code>\ud83d\ude80 SQLMap AI - AI-Powered SQL Injection Testing\n================================================\n\n\ud83d\udccb Target Information:\n   URL: http://testphp.vulnweb.com/listproducts.php?cat=1\n   Method: GET\n   Parameter: cat\n\n\ud83e\udd16 AI Provider: Groq (Auto-selected)\n\n\ud83d\udd04 Starting Enhanced Mode...\n   \u251c\u2500 Initial Assessment: Checking for SQL injection vulnerabilities\n   \u251c\u2500 DBMS Identification: Detecting database type\n   \u251c\u2500 Enhanced Testing: Applying advanced techniques\n   \u2514\u2500 AI Analysis: Generating insights and recommendations\n\n\u2705 Results:\n   \u251c\u2500 Vulnerable Parameters: cat (GET)\n   \u251c\u2500 DBMS: MySQL &gt;= 5.6\n   \u251c\u2500 Techniques: Boolean-based blind, time-based blind\n   \u2514\u2500 Risk Level: HIGH\n</code></pre></p>"},{"location":"user-guide/basic-usage/#example-2-request-file-testing","title":"Example 2: Request File Testing","text":"<pre><code># Test with captured request\nsqlmap-ai -r login_request.txt --enhanced\n</code></pre> <p>Request File Content: <pre><code>POST /login.php HTTP/1.1\nHost: example.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 38\n\nusername=admin&amp;password=test\n</code></pre></p>"},{"location":"user-guide/basic-usage/#example-3-advanced-testing","title":"Example 3: Advanced Testing","text":"<pre><code># Comprehensive scan with custom options\nsqlmap-ai --enhanced --adaptive \\\n  -r request.txt \\\n  --risk 3 \\\n  --level 4 \\\n  --threads 8 \\\n  --timeout 60 \\\n  --ai-provider groq \\\n  --output-dir ./scan_results \\\n  --html-report\n</code></pre>"},{"location":"user-guide/basic-usage/#understanding-output","title":"Understanding Output","text":""},{"location":"user-guide/basic-usage/#console-output","title":"Console Output","text":"<p>SQLMap AI provides real-time feedback:</p> <pre><code>\ud83d\udd04 Progress: [\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588] 100%\n\ud83d\udcca Status: Testing parameter 'id' (GET)\n\ud83c\udfaf AI Analysis: Target appears vulnerable to boolean-based injection\n</code></pre>"},{"location":"user-guide/basic-usage/#results-summary","title":"Results Summary","text":"<p>After testing, you'll see:</p> <ul> <li>Vulnerable Parameters: Which parameters are exploitable</li> <li>DBMS Information: Database type and version</li> <li>Techniques: Successful injection methods</li> <li>Risk Assessment: Overall vulnerability risk</li> <li>AI Recommendations: Next steps and remediation advice</li> </ul>"},{"location":"user-guide/basic-usage/#generated-files","title":"Generated Files","text":"<p>SQLMap AI creates several output files:</p> <pre><code>./results/\n\u251c\u2500\u2500 sqlmap_ai_report_20241201_143022.html    # HTML report\n\u251c\u2500\u2500 sqlmap_ai_results_20241201_143022.json   # JSON results\n\u251c\u2500\u2500 sqlmap_ai_log_20241201_143022.log        # Detailed log\n\u2514\u2500\u2500 screenshots/                              # Screenshots (if enabled)\n</code></pre>"},{"location":"user-guide/basic-usage/#best-practices","title":"Best Practices","text":""},{"location":"user-guide/basic-usage/#1-start-simple","title":"1. Start Simple","text":"<p>Begin with basic tests before using advanced features:</p> <pre><code># Start with simple mode\nsqlmap-ai --simple -u \"http://example.com/page.php?id=1\"\n\n# Then try enhanced mode\nsqlmap-ai --enhanced -u \"http://example.com/page.php?id=1\"\n</code></pre>"},{"location":"user-guide/basic-usage/#2-use-request-files","title":"2. Use Request Files","text":"<p>Capture real requests for more accurate testing:</p> <pre><code># Use browser developer tools to capture requests\n# Save as .txt file and test\nsqlmap-ai -r captured_request.txt\n</code></pre>"},{"location":"user-guide/basic-usage/#3-monitor-resources","title":"3. Monitor Resources","text":"<p>Be mindful of system resources:</p> <pre><code># Limit threads for shared systems\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --threads 5\n\n# Set reasonable timeouts\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --timeout 30\n</code></pre>"},{"location":"user-guide/basic-usage/#4-save-results","title":"4. Save Results","text":"<p>Always save your results for later analysis:</p> <pre><code># Save to specific directory\nsqlmap-ai -u \"http://example.com/page.php?id=1\" --output-dir ./my_results\n</code></pre>"},{"location":"user-guide/basic-usage/#common-patterns","title":"Common Patterns","text":""},{"location":"user-guide/basic-usage/#testing-multiple-parameters","title":"Testing Multiple Parameters","text":"<pre><code># Test all parameters in URL\nsqlmap-ai -u \"http://example.com/search.php?query=test&amp;category=1&amp;sort=name\"\n\n# Test specific parameters\nsqlmap-ai -u \"http://example.com/search.php?query=test&amp;category=1\" --param-exclude=sort\n</code></pre>"},{"location":"user-guide/basic-usage/#testing-different-http-methods","title":"Testing Different HTTP Methods","text":"<pre><code># Test GET parameters\nsqlmap-ai -u \"http://example.com/page.php?id=1\"\n\n# Test POST data\nsqlmap-ai -r post_request.txt\n\n# Test cookies\nsqlmap-ai -u \"http://example.com/page.php\" --cookie=\"session=abc123\"\n</code></pre>"},{"location":"user-guide/basic-usage/#testing-with-authentication","title":"Testing with Authentication","text":"<pre><code># Use authentication headers\nsqlmap-ai -r request.txt --headers=\"Authorization: Bearer token123\"\n\n# Use session cookies\nsqlmap-ai -u \"http://example.com/admin.php\" --cookie=\"session=abc123\"\n</code></pre>"},{"location":"user-guide/basic-usage/#next-steps","title":"Next Steps","text":"<p>Now that you understand basic usage:</p> <ol> <li>Testing Modes: Learn about different testing approaches</li> <li>Request Files: Master request file testing</li> <li>Advanced Features: Explore advanced capabilities</li> <li>Examples: See more real-world examples</li> </ol>"},{"location":"user-guide/basic-usage/#getting-help","title":"Getting Help","text":"<pre><code># Show all available options\nsqlmap-ai --help\n\n# Show enhanced mode help\nsqlmap-ai --enhanced --help\n\n# Show simple mode help\nsqlmap-ai --simple --help\n</code></pre>"}]}